<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'jms_serializer.event_dispatcher' shared service.

include_once \dirname(__DIR__, 4).'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/EventDispatcherInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/EventDispatcher.php';
include_once \dirname(__DIR__, 4).'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/LazyEventDispatcher.php';

$this->privates['jms_serializer.event_dispatcher'] = $instance = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'hateoas.event_subscriber.json' => ['services', 'hateoas.event_subscriber.json', 'getHateoas_EventSubscriber_JsonService.php', true],
    'hateoas.event_subscriber.xml' => ['services', 'hateoas.event_subscriber.xml', 'getHateoas_EventSubscriber_XmlService.php', true],
    'jms_serializer.doctrine_proxy_subscriber' => ['services', 'jms_serializer.doctrine_proxy_subscriber', 'getJmsSerializer_DoctrineProxySubscriberService.php', true],
    'jms_serializer.stopwatch_subscriber' => ['services', 'jms_serializer.stopwatch_subscriber', 'getJmsSerializer_StopwatchSubscriberService.php', true],
], [
    'hateoas.event_subscriber.json' => '?',
    'hateoas.event_subscriber.xml' => '?',
    'jms_serializer.doctrine_proxy_subscriber' => '?',
    'jms_serializer.stopwatch_subscriber' => '?',
]));

$instance->setListeners(['serializer.post_serialize' => [0 => [0 => [0 => 'hateoas.event_subscriber.xml', 1 => 'onPostSerialize'], 1 => NULL, 2 => 'xml'], 1 => [0 => [0 => 'hateoas.event_subscriber.json', 1 => 'onPostSerialize'], 1 => NULL, 2 => 'json'], 2 => [0 => [0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPostSerialize'], 1 => NULL, 2 => NULL]], 'serializer.pre_serialize' => [0 => [0 => [0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPreSerialize'], 1 => NULL, 2 => NULL], 1 => [0 => [0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerializeTypedProxy'], 1 => NULL, 2 => NULL], 2 => [0 => [0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'], 1 => NULL, 2 => NULL]]]);

return $instance;
