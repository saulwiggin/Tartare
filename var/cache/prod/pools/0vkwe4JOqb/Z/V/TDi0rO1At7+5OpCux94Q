<?php //%255BSylius%255CComponent%255CAttribute%255CModel%255CAttribute%2524CLASSMETADATA%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
        clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Sylius\\Component\\Attribute\\Model\\Attribute',
            ],
            'namespace' => [
                'Sylius\\Component\\Attribute\\Model',
            ],
            'rootEntityName' => [
                'Sylius\\Component\\Attribute\\Model\\Attribute',
            ],
            'isMappedSuperclass' => [
                true,
            ],
            'identifier' => [
                [
                    'id',
                ],
            ],
            'generatorType' => [
                4,
            ],
            'fieldMappings' => [
                [
                    'code' => [
                        'fieldName' => 'code',
                        'type' => 'string',
                        'columnName' => 'code',
                        'unique' => true,
                    ],
                    'type' => [
                        'fieldName' => 'type',
                        'type' => 'string',
                        'columnName' => 'type',
                    ],
                    'storageType' => [
                        'fieldName' => 'storageType',
                        'type' => 'string',
                        'columnName' => 'storage_type',
                    ],
                    'configuration' => [
                        'fieldName' => 'configuration',
                        'type' => 'array',
                        'columnName' => 'configuration',
                    ],
                    'createdAt' => [
                        'fieldName' => 'createdAt',
                        'type' => 'datetime',
                        'columnName' => 'created_at',
                    ],
                    'updatedAt' => [
                        'fieldName' => 'updatedAt',
                        'type' => 'datetime',
                        'columnName' => 'updated_at',
                        'nullable' => true,
                    ],
                    'position' => [
                        'fieldName' => 'position',
                        'type' => 'integer',
                        'columnName' => 'position',
                    ],
                    'id' => [
                        'id' => true,
                        'fieldName' => 'id',
                        'type' => 'integer',
                        'columnName' => 'id',
                    ],
                ],
            ],
            'fieldNames' => [
                [
                    'code' => 'code',
                    'type' => 'type',
                    'storage_type' => 'storageType',
                    'configuration' => 'configuration',
                    'created_at' => 'createdAt',
                    'updated_at' => 'updatedAt',
                    'position' => 'position',
                    'id' => 'id',
                ],
            ],
            'columnNames' => [
                [
                    'code' => 'code',
                    'type' => 'type',
                    'storageType' => 'storage_type',
                    'configuration' => 'configuration',
                    'createdAt' => 'created_at',
                    'updatedAt' => 'updated_at',
                    'position' => 'position',
                    'id' => 'id',
                ],
            ],
            'table' => [
                [
                    'name' => 'sylius_attribute',
                ],
            ],
            'idGenerator' => [
                $o[1],
            ],
        ],
    ],
    $o[0],
    []
); }];
