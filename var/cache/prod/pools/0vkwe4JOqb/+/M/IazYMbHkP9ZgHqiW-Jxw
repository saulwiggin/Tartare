<?php //%255BPayum%255CCore%255CModel%255CGatewayConfig%2524CLASSMETADATA%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
        clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Payum\\Core\\Model\\GatewayConfig',
            ],
            'namespace' => [
                'Payum\\Core\\Model',
            ],
            'rootEntityName' => [
                'Payum\\Core\\Model\\GatewayConfig',
            ],
            'isMappedSuperclass' => [
                true,
            ],
            'fieldMappings' => [
                [
                    'gatewayName' => [
                        'fieldName' => 'gatewayName',
                        'type' => 'string',
                        'columnName' => 'gateway_name',
                    ],
                    'factoryName' => [
                        'fieldName' => 'factoryName',
                        'type' => 'string',
                        'columnName' => 'factory_name',
                    ],
                    'config' => [
                        'fieldName' => 'config',
                        'type' => 'json_array',
                        'columnName' => 'config',
                    ],
                ],
            ],
            'fieldNames' => [
                [
                    'gateway_name' => 'gatewayName',
                    'factory_name' => 'factoryName',
                    'config' => 'config',
                ],
            ],
            'columnNames' => [
                [
                    'gatewayName' => 'gateway_name',
                    'factoryName' => 'factory_name',
                    'config' => 'config',
                ],
            ],
            'table' => [
                [
                    'name' => 'GatewayConfig',
                ],
            ],
            'idGenerator' => [
                $o[1],
            ],
        ],
    ],
    $o[0],
    []
); }];
