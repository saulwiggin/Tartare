<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'sonata.block.context_manager.default' shared service.

include_once \dirname(__DIR__, 4).'/vendor/sonata-project/block-bundle/src/Block/BlockContextManagerInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/sonata-project/block-bundle/src/Block/BlockContextManager.php';
include_once \dirname(__DIR__, 4).'/vendor/sonata-project/block-bundle/src/Block/BlockLoaderInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/sonata-project/block-bundle/src/Block/BlockLoaderChain.php';
include_once \dirname(__DIR__, 4).'/vendor/sonata-project/block-bundle/src/Block/Loader/ServiceLoader.php';

$this->services['sonata.block.context_manager.default'] = $instance = new \Sonata\BlockBundle\Block\BlockContextManager(new \Sonata\BlockBundle\Block\BlockLoaderChain([0 => new \Sonata\BlockBundle\Block\Loader\ServiceLoader($this->parameters['sonata_blocks.block_types'])]), ($this->services['sonata.block.manager'] ?? $this->load('getSonata_Block_ManagerService.php')), $this->parameters['sonata_block.cache_blocks'], ($this->privates['monolog.logger'] ?? $this->load('getMonolog_LoggerService.php')));

$instance->addSettingsByType('sonata.block.service.template', ['address' => NULL, 'addresses' => NULL, 'cart' => NULL, 'channel' => NULL, 'customer' => NULL, 'form' => NULL, 'order' => NULL, 'order_item' => NULL, 'orders' => NULL, 'product' => NULL, 'product_review' => NULL, 'product_reviews' => NULL, 'products' => NULL, 'resource' => NULL, 'resources' => NULL, 'statistics' => NULL, 'taxon' => NULL], true);

return $instance;
