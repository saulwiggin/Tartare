<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.access_map' shared service.

include_once \dirname(__DIR__, 4).'/vendor/symfony/security/Http/AccessMapInterface.php';
include_once \dirname(__DIR__, 4).'/vendor/symfony/security/Http/AccessMap.php';

$this->privates['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/_partial', NULL, [], [0 => '127.0.0.1', 1 => '::1']), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/_partial'), [0 => 'ROLE_NO_ACCESS'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!admin|api/.*|api$|media/.*)[^/]++/_partial', NULL, [], [0 => '127.0.0.1', 1 => '::1']), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!admin|api/.*|api$|media/.*)[^/]++/_partial'), [0 => 'ROLE_NO_ACCESS'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/login'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!admin|api/.*|api$|media/.*)[^/]++/login'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!admin|api/.*|api$|media/.*)[^/]++/register'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!admin|api/.*|api$|media/.*)[^/]++/verify'), [0 => 'IS_AUTHENTICATED_ANONYMOUSLY'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin'), [0 => 'ROLE_ADMINISTRATION_ACCESS'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/.*'), [0 => 'ROLE_API_ACCESS'], NULL);
$instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/(?!admin|api/.*|api$|media/.*)[^/]++/account'), [0 => 'ROLE_USER'], NULL);

return $instance;
